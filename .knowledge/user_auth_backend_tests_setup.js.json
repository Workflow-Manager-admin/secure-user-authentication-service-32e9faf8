{"is_source_file": true, "format": "JavaScript (Node.js, CommonJS modules)", "description": "This file sets up a testing environment for a backend user authentication service, configuring environment variables, attempting database connections, mocking database operations if necessary, and cleaning up the database post-tests.", "external_files": ["../src/services/database"], "external_methods": ["mongoose.connect", "mongoose.connection.dropDatabase", "mongoose.connection.close", "mongoose.connection.collections", "collection.deleteMany"], "published": [], "classes": [], "methods": [{"name": "beforeAll", "description": "Initial setup before running tests, attempts to connect to a MongoDB instance or mocks the database if connection fails."}, {"name": "afterAll", "description": "Cleans up the database after all tests have run, dropping and closing the connection."}, {"name": "afterEach", "description": "Cleans sample data from all collections after each individual test run."}], "calls": ["mongoose.connect", "jest.mock", "mongoose.connection.dropDatabase", "mongoose.connection.close", "collection.deleteMany"], "search-terms": ["setup.js", "test environment", "MongoDB connection", "database mocking", "environment variables"], "state": 2, "file_id": 22, "knowledge_revision": 55, "git_revision": "", "revision_history": [{"52": ""}, {"55": ""}], "ctags": [{"_type": "tag", "name": "mongoServer", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-service-32e9faf8/user_auth_backend/tests/setup.js", "pattern": "/^let mongoServer;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "mongoose", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-service-32e9faf8/user_auth_backend/tests/setup.js", "pattern": "/^const mongoose = require('mongoose');$/", "language": "JavaScript", "kind": "constant"}], "hash": "3a26e10cbf6aa5d7dc3efb4bcd821cdd", "format-version": 4, "code-base-name": "user_auth_backend", "filename": "user_auth_backend/tests/setup.js", "fields": [{"name": "let mongoServer;", "scope": "", "scopeKind": "", "description": "unavailable"}]}